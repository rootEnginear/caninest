import{b as f,c as j,t as g,A as h,j as C,d as b,z as P,w,q as A,G as d,H as S}from"./web-D9Sxpu4B.js";const p={div:{type:["Flow","Palpable"],parents:{},children:{Flow:"*"}},p:{type:["Flow","Palpable"],parents:{},children:{Phrasing:"*"}}};var k=w('<main class="container mx-auto px-4 py-8 flex flex-col gap-2"><h1 class="text-5xl font-bold">Can I nest...</h1><p class=-mt-1>HTML tag nesting checker</p><hr><div class="font-mono flex items-center gap-1"><datalist id=tag-list></datalist><input class=border type=text list=tag-list><span>&gt;</span><input class=border type=text list=tag-list></div><p>'),T=w("<option>");function E(){const[t,m]=f(""),[n,x]=f(""),y=j(()=>{const e=p[t()];if(!e)return{allowed:null,information:`${t()} tag unknown`};const l=p[n()];if(!l)return{allowed:null,information:`${n()} tag unknown`};const r=Object.keys(e.children);if(r.length>0&&!r.find(a=>l.type.includes(a)))return{allowed:!1,information:`${t()} doesn't allow ${n()} as a children, because ${t()} only allows ${Object.keys(e.children).join(", ")} but ${n()} is ${l.type.join(", ")}`};const s=Object.keys(l.parents);return s.length>0&&!s.find(a=>e.type.includes(a))?{allowed:!1,information:`${n()} doesn't allow ${t()} as a parent, because ${n()} only allows ${Object.keys(l.parents).join(", ")} but ${t()} is ${e.type.join(", ")}`}:{allowed:!0,information:"Yes!"}});return(()=>{var e=g(k),l=e.firstChild,r=l.nextSibling,s=r.nextSibling,o=s.nextSibling,a=o.firstChild,c=a.nextSibling,v=c.nextSibling,u=v.nextSibling,_=o.nextSibling;return h(a,C(S,{get each(){return Object.keys(p)},children:i=>(()=>{var $=g(T);return d($,"value",i),$})()})),c.$$input=i=>m(i.currentTarget.value),u.$$input=i=>x(i.currentTarget.value),h(_,()=>y().information),b(()=>d(c,"value",t())),b(()=>d(u,"value",n())),P(),e})()}A(["input"]);export{E as default};
